/* phxrpc_alphasvr_stub.h

 Generated by phxrpc_pb2client from alpha_svr.proto

 Please DO NOT edit unless you know exactly what you are doing.

*/

#pragma once

#include "alpha_svr.pb.h"


namespace phxrpc {


class BaseMessageHandlerFactory;
class BaseTcpStream;
class ClientMonitor;


}


class AlphaSvrStub {
  public:
    AlphaSvrStub(phxrpc::BaseTcpStream &socket, phxrpc::ClientMonitor &client_monitor,
            phxrpc::BaseMessageHandlerFactory &msg_handler_factory);
    virtual ~AlphaSvrStub();

    void set_keep_alive(const bool keep_alive);

    int PHXEcho(const google::protobuf::StringValue &req, google::protobuf::StringValue *resp);
    int AddTwoDigits(const alphasvr::AddTwoDigitsReq &req, alphasvr::AddTwoDigitsResp *resp);
    int AddSomeDigits(const alphasvr::AddSomeDigitsReq &req, alphasvr::AddSomeDigitsResp *resp);

  private:
    phxrpc::BaseTcpStream &socket_;
    phxrpc::ClientMonitor &client_monitor_;
    bool keep_alive_{false};
    phxrpc::BaseMessageHandlerFactory &msg_handler_factory_;
};

