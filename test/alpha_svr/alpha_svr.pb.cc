// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: alpha_svr.proto

#include "alpha_svr.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace alphasvr {
class AddTwoDigitsReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddTwoDigitsReq> _instance;
} _AddTwoDigitsReq_default_instance_;
class AddTwoDigitsRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddTwoDigitsResp> _instance;
} _AddTwoDigitsResp_default_instance_;
class AddSomeDigitsReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddSomeDigitsReq> _instance;
} _AddSomeDigitsReq_default_instance_;
class AddSomeDigitsRespDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddSomeDigitsResp> _instance;
} _AddSomeDigitsResp_default_instance_;
}  // namespace alphasvr
static void InitDefaultsscc_info_AddSomeDigitsReq_alpha_5fsvr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alphasvr::_AddSomeDigitsReq_default_instance_;
    new (ptr) ::alphasvr::AddSomeDigitsReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alphasvr::AddSomeDigitsReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddSomeDigitsReq_alpha_5fsvr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddSomeDigitsReq_alpha_5fsvr_2eproto}, {}};

static void InitDefaultsscc_info_AddSomeDigitsResp_alpha_5fsvr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alphasvr::_AddSomeDigitsResp_default_instance_;
    new (ptr) ::alphasvr::AddSomeDigitsResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alphasvr::AddSomeDigitsResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddSomeDigitsResp_alpha_5fsvr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddSomeDigitsResp_alpha_5fsvr_2eproto}, {}};

static void InitDefaultsscc_info_AddTwoDigitsReq_alpha_5fsvr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alphasvr::_AddTwoDigitsReq_default_instance_;
    new (ptr) ::alphasvr::AddTwoDigitsReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alphasvr::AddTwoDigitsReq::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddTwoDigitsReq_alpha_5fsvr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddTwoDigitsReq_alpha_5fsvr_2eproto}, {}};

static void InitDefaultsscc_info_AddTwoDigitsResp_alpha_5fsvr_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::alphasvr::_AddTwoDigitsResp_default_instance_;
    new (ptr) ::alphasvr::AddTwoDigitsResp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::alphasvr::AddTwoDigitsResp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddTwoDigitsResp_alpha_5fsvr_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddTwoDigitsResp_alpha_5fsvr_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_alpha_5fsvr_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_alpha_5fsvr_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_alpha_5fsvr_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_alpha_5fsvr_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::alphasvr::AddTwoDigitsReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::alphasvr::AddTwoDigitsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alphasvr::AddTwoDigitsReq, lhs_),
  PROTOBUF_FIELD_OFFSET(::alphasvr::AddTwoDigitsReq, rhs_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::alphasvr::AddTwoDigitsResp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::alphasvr::AddTwoDigitsResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alphasvr::AddTwoDigitsResp, sum_),
  0,
  PROTOBUF_FIELD_OFFSET(::alphasvr::AddSomeDigitsReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::alphasvr::AddSomeDigitsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alphasvr::AddSomeDigitsReq, nums_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::alphasvr::AddSomeDigitsResp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::alphasvr::AddSomeDigitsResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::alphasvr::AddSomeDigitsResp, sum_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::alphasvr::AddTwoDigitsReq)},
  { 9, 15, sizeof(::alphasvr::AddTwoDigitsResp)},
  { 16, 22, sizeof(::alphasvr::AddSomeDigitsReq)},
  { 23, 29, sizeof(::alphasvr::AddSomeDigitsResp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alphasvr::_AddTwoDigitsReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alphasvr::_AddTwoDigitsResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alphasvr::_AddSomeDigitsReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::alphasvr::_AddSomeDigitsResp_default_instance_),
};

const char descriptor_table_protodef_alpha_5fsvr_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017alpha_svr.proto\022\010alphasvr\032\036google/prot"
  "obuf/wrappers.proto\032\033google/protobuf/emp"
  "ty.proto\032\027phxrpc/rpc/phxrpc.proto\"+\n\017Add"
  "TwoDigitsReq\022\013\n\003lhs\030\001 \001(\005\022\013\n\003rhs\030\002 \001(\005\"\037"
  "\n\020AddTwoDigitsResp\022\013\n\003sum\030\001 \001(\005\" \n\020AddSo"
  "meDigitsReq\022\014\n\004nums\030\001 \003(\005\" \n\021AddSomeDigi"
  "tsResp\022\013\n\003sum\030\001 \001(\0052\351\001\n\010AlphaSvr\022m\n\014AddT"
  "woDigits\022\031.alphasvr.AddTwoDigitsReq\032\032.al"
  "phasvr.AddTwoDigitsResp\"&\200\310\320\007\001\212\310\320\007\004l:r:\222"
  "\310\320\007\023-l digit1 -u digit2\022n\n\rAddSomeDigits"
  "\022\032.alphasvr.AddSomeDigitsReq\032\033.alphasvr."
  "AddSomeDigitsResp\"$\200\310\320\007\002\212\310\320\007\002v:\222\310\320\007\023-v d"
  "igit_split_by_&"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_alpha_5fsvr_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
  &::descriptor_table_phxrpc_2frpc_2fphxrpc_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_alpha_5fsvr_2eproto_sccs[4] = {
  &scc_info_AddSomeDigitsReq_alpha_5fsvr_2eproto.base,
  &scc_info_AddSomeDigitsResp_alpha_5fsvr_2eproto.base,
  &scc_info_AddTwoDigitsReq_alpha_5fsvr_2eproto.base,
  &scc_info_AddTwoDigitsResp_alpha_5fsvr_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_alpha_5fsvr_2eproto_once;
static bool descriptor_table_alpha_5fsvr_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_alpha_5fsvr_2eproto = {
  &descriptor_table_alpha_5fsvr_2eproto_initialized, descriptor_table_protodef_alpha_5fsvr_2eproto, "alpha_svr.proto", 495,
  &descriptor_table_alpha_5fsvr_2eproto_once, descriptor_table_alpha_5fsvr_2eproto_sccs, descriptor_table_alpha_5fsvr_2eproto_deps, 4, 3,
  schemas, file_default_instances, TableStruct_alpha_5fsvr_2eproto::offsets,
  file_level_metadata_alpha_5fsvr_2eproto, 4, file_level_enum_descriptors_alpha_5fsvr_2eproto, file_level_service_descriptors_alpha_5fsvr_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_alpha_5fsvr_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_alpha_5fsvr_2eproto), true);
namespace alphasvr {

// ===================================================================

void AddTwoDigitsReq::InitAsDefaultInstance() {
}
class AddTwoDigitsReq::_Internal {
 public:
  using HasBits = decltype(std::declval<AddTwoDigitsReq>()._has_bits_);
  static void set_has_lhs(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_rhs(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

AddTwoDigitsReq::AddTwoDigitsReq()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:alphasvr.AddTwoDigitsReq)
}
AddTwoDigitsReq::AddTwoDigitsReq(const AddTwoDigitsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lhs_, &from.lhs_,
    static_cast<size_t>(reinterpret_cast<char*>(&rhs_) -
    reinterpret_cast<char*>(&lhs_)) + sizeof(rhs_));
  // @@protoc_insertion_point(copy_constructor:alphasvr.AddTwoDigitsReq)
}

void AddTwoDigitsReq::SharedCtor() {
  ::memset(&lhs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rhs_) -
      reinterpret_cast<char*>(&lhs_)) + sizeof(rhs_));
}

AddTwoDigitsReq::~AddTwoDigitsReq() {
  // @@protoc_insertion_point(destructor:alphasvr.AddTwoDigitsReq)
  SharedDtor();
}

void AddTwoDigitsReq::SharedDtor() {
}

void AddTwoDigitsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddTwoDigitsReq& AddTwoDigitsReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddTwoDigitsReq_alpha_5fsvr_2eproto.base);
  return *internal_default_instance();
}


void AddTwoDigitsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:alphasvr.AddTwoDigitsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&lhs_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rhs_) -
        reinterpret_cast<char*>(&lhs_)) + sizeof(rhs_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* AddTwoDigitsReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 lhs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_lhs(&has_bits);
          lhs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 rhs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_rhs(&has_bits);
          rhs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddTwoDigitsReq::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alphasvr.AddTwoDigitsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 lhs = 1;
  if (cached_has_bits & 0x00000001u) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_lhs(), target);
  }

  // optional int32 rhs = 2;
  if (cached_has_bits & 0x00000002u) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_rhs(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alphasvr.AddTwoDigitsReq)
  return target;
}

size_t AddTwoDigitsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alphasvr.AddTwoDigitsReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 lhs = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_lhs());
    }

    // optional int32 rhs = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_rhs());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddTwoDigitsReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alphasvr.AddTwoDigitsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddTwoDigitsReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddTwoDigitsReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alphasvr.AddTwoDigitsReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alphasvr.AddTwoDigitsReq)
    MergeFrom(*source);
  }
}

void AddTwoDigitsReq::MergeFrom(const AddTwoDigitsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alphasvr.AddTwoDigitsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      lhs_ = from.lhs_;
    }
    if (cached_has_bits & 0x00000002u) {
      rhs_ = from.rhs_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AddTwoDigitsReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alphasvr.AddTwoDigitsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddTwoDigitsReq::CopyFrom(const AddTwoDigitsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alphasvr.AddTwoDigitsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddTwoDigitsReq::IsInitialized() const {
  return true;
}

void AddTwoDigitsReq::InternalSwap(AddTwoDigitsReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(lhs_, other->lhs_);
  swap(rhs_, other->rhs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddTwoDigitsReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddTwoDigitsResp::InitAsDefaultInstance() {
}
class AddTwoDigitsResp::_Internal {
 public:
  using HasBits = decltype(std::declval<AddTwoDigitsResp>()._has_bits_);
  static void set_has_sum(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AddTwoDigitsResp::AddTwoDigitsResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:alphasvr.AddTwoDigitsResp)
}
AddTwoDigitsResp::AddTwoDigitsResp(const AddTwoDigitsResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sum_ = from.sum_;
  // @@protoc_insertion_point(copy_constructor:alphasvr.AddTwoDigitsResp)
}

void AddTwoDigitsResp::SharedCtor() {
  sum_ = 0;
}

AddTwoDigitsResp::~AddTwoDigitsResp() {
  // @@protoc_insertion_point(destructor:alphasvr.AddTwoDigitsResp)
  SharedDtor();
}

void AddTwoDigitsResp::SharedDtor() {
}

void AddTwoDigitsResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddTwoDigitsResp& AddTwoDigitsResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddTwoDigitsResp_alpha_5fsvr_2eproto.base);
  return *internal_default_instance();
}


void AddTwoDigitsResp::Clear() {
// @@protoc_insertion_point(message_clear_start:alphasvr.AddTwoDigitsResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sum_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* AddTwoDigitsResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 sum = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_sum(&has_bits);
          sum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddTwoDigitsResp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alphasvr.AddTwoDigitsResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 sum = 1;
  if (cached_has_bits & 0x00000001u) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_sum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alphasvr.AddTwoDigitsResp)
  return target;
}

size_t AddTwoDigitsResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alphasvr.AddTwoDigitsResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 sum = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sum());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddTwoDigitsResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alphasvr.AddTwoDigitsResp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddTwoDigitsResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddTwoDigitsResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alphasvr.AddTwoDigitsResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alphasvr.AddTwoDigitsResp)
    MergeFrom(*source);
  }
}

void AddTwoDigitsResp::MergeFrom(const AddTwoDigitsResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alphasvr.AddTwoDigitsResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_sum()) {
    _internal_set_sum(from._internal_sum());
  }
}

void AddTwoDigitsResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alphasvr.AddTwoDigitsResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddTwoDigitsResp::CopyFrom(const AddTwoDigitsResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alphasvr.AddTwoDigitsResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddTwoDigitsResp::IsInitialized() const {
  return true;
}

void AddTwoDigitsResp::InternalSwap(AddTwoDigitsResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(sum_, other->sum_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddTwoDigitsResp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddSomeDigitsReq::InitAsDefaultInstance() {
}
class AddSomeDigitsReq::_Internal {
 public:
  using HasBits = decltype(std::declval<AddSomeDigitsReq>()._has_bits_);
};

AddSomeDigitsReq::AddSomeDigitsReq()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:alphasvr.AddSomeDigitsReq)
}
AddSomeDigitsReq::AddSomeDigitsReq(const AddSomeDigitsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      nums_(from.nums_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:alphasvr.AddSomeDigitsReq)
}

void AddSomeDigitsReq::SharedCtor() {
}

AddSomeDigitsReq::~AddSomeDigitsReq() {
  // @@protoc_insertion_point(destructor:alphasvr.AddSomeDigitsReq)
  SharedDtor();
}

void AddSomeDigitsReq::SharedDtor() {
}

void AddSomeDigitsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddSomeDigitsReq& AddSomeDigitsReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddSomeDigitsReq_alpha_5fsvr_2eproto.base);
  return *internal_default_instance();
}


void AddSomeDigitsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:alphasvr.AddSomeDigitsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nums_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* AddSomeDigitsReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int32 nums = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_nums(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_nums(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddSomeDigitsReq::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alphasvr.AddSomeDigitsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 nums = 1;
  for (int i = 0, n = this->_internal_nums_size(); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_nums(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alphasvr.AddSomeDigitsReq)
  return target;
}

size_t AddSomeDigitsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alphasvr.AddSomeDigitsReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 nums = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->nums_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_nums_size());
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddSomeDigitsReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alphasvr.AddSomeDigitsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSomeDigitsReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddSomeDigitsReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alphasvr.AddSomeDigitsReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alphasvr.AddSomeDigitsReq)
    MergeFrom(*source);
  }
}

void AddSomeDigitsReq::MergeFrom(const AddSomeDigitsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alphasvr.AddSomeDigitsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nums_.MergeFrom(from.nums_);
}

void AddSomeDigitsReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alphasvr.AddSomeDigitsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSomeDigitsReq::CopyFrom(const AddSomeDigitsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alphasvr.AddSomeDigitsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSomeDigitsReq::IsInitialized() const {
  return true;
}

void AddSomeDigitsReq::InternalSwap(AddSomeDigitsReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  nums_.InternalSwap(&other->nums_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddSomeDigitsReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddSomeDigitsResp::InitAsDefaultInstance() {
}
class AddSomeDigitsResp::_Internal {
 public:
  using HasBits = decltype(std::declval<AddSomeDigitsResp>()._has_bits_);
  static void set_has_sum(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AddSomeDigitsResp::AddSomeDigitsResp()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:alphasvr.AddSomeDigitsResp)
}
AddSomeDigitsResp::AddSomeDigitsResp(const AddSomeDigitsResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sum_ = from.sum_;
  // @@protoc_insertion_point(copy_constructor:alphasvr.AddSomeDigitsResp)
}

void AddSomeDigitsResp::SharedCtor() {
  sum_ = 0;
}

AddSomeDigitsResp::~AddSomeDigitsResp() {
  // @@protoc_insertion_point(destructor:alphasvr.AddSomeDigitsResp)
  SharedDtor();
}

void AddSomeDigitsResp::SharedDtor() {
}

void AddSomeDigitsResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddSomeDigitsResp& AddSomeDigitsResp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddSomeDigitsResp_alpha_5fsvr_2eproto.base);
  return *internal_default_instance();
}


void AddSomeDigitsResp::Clear() {
// @@protoc_insertion_point(message_clear_start:alphasvr.AddSomeDigitsResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sum_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* AddSomeDigitsResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 sum = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_sum(&has_bits);
          sum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddSomeDigitsResp::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:alphasvr.AddSomeDigitsResp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 sum = 1;
  if (cached_has_bits & 0x00000001u) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_sum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alphasvr.AddSomeDigitsResp)
  return target;
}

size_t AddSomeDigitsResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alphasvr.AddSomeDigitsResp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 sum = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sum());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddSomeDigitsResp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alphasvr.AddSomeDigitsResp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSomeDigitsResp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddSomeDigitsResp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alphasvr.AddSomeDigitsResp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alphasvr.AddSomeDigitsResp)
    MergeFrom(*source);
  }
}

void AddSomeDigitsResp::MergeFrom(const AddSomeDigitsResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alphasvr.AddSomeDigitsResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_sum()) {
    _internal_set_sum(from._internal_sum());
  }
}

void AddSomeDigitsResp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alphasvr.AddSomeDigitsResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSomeDigitsResp::CopyFrom(const AddSomeDigitsResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alphasvr.AddSomeDigitsResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSomeDigitsResp::IsInitialized() const {
  return true;
}

void AddSomeDigitsResp::InternalSwap(AddSomeDigitsResp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(sum_, other->sum_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddSomeDigitsResp::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace alphasvr
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::alphasvr::AddTwoDigitsReq* Arena::CreateMaybeMessage< ::alphasvr::AddTwoDigitsReq >(Arena* arena) {
  return Arena::CreateInternal< ::alphasvr::AddTwoDigitsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::alphasvr::AddTwoDigitsResp* Arena::CreateMaybeMessage< ::alphasvr::AddTwoDigitsResp >(Arena* arena) {
  return Arena::CreateInternal< ::alphasvr::AddTwoDigitsResp >(arena);
}
template<> PROTOBUF_NOINLINE ::alphasvr::AddSomeDigitsReq* Arena::CreateMaybeMessage< ::alphasvr::AddSomeDigitsReq >(Arena* arena) {
  return Arena::CreateInternal< ::alphasvr::AddSomeDigitsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::alphasvr::AddSomeDigitsResp* Arena::CreateMaybeMessage< ::alphasvr::AddSomeDigitsResp >(Arena* arena) {
  return Arena::CreateInternal< ::alphasvr::AddSomeDigitsResp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
