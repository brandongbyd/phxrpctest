/* alphasvr_tool_impl.cpp

 Generated by phxrpc_pb2tool from alpha_svr.proto

*/

#include "alphasvr_tool_impl.h"

#include "alphasvr_client.h"

#include "phxrpc/file.h"


using namespace phxrpc;
using namespace std;


AlphaSvrToolImpl::AlphaSvrToolImpl() {
}

AlphaSvrToolImpl::~AlphaSvrToolImpl() {
}

int AlphaSvrToolImpl::PHXEcho(phxrpc::OptMap &opt_map) {
    google::protobuf::StringValue req;
    google::protobuf::StringValue resp;

    if (nullptr == opt_map.Get('s')) return -1;

    req.set_value(opt_map.Get('s'));

    AlphaSvrClient client;
    int ret{client.PHXEcho(req, &resp)};
    printf("%s return %d\n", __func__, ret);
    printf("resp: {\n%s}\n", resp.DebugString().c_str());

    return ret;
}

int AlphaSvrToolImpl::AddTwoDigits(phxrpc::OptMap &opt_map) {
    alphasvr::AddTwoDigitsReq req;
    alphasvr::AddTwoDigitsResp resp;

    // TODO: fill req from opt_map

    if (nullptr == opt_map.Get('l')) return -1;
    if (nullptr == opt_map.Get('r')) return -1;

    int32_t num1 = 0, num2 = 0;
    opt_map.GetInt32('l',&num1);
    opt_map.GetInt32('r',&num2);

    req.set_lhs(num1);
    req.set_rhs(num2);

    printf("req: {\n%s}\n", req.DebugString().c_str());

    AlphaSvrClient client;
    int ret{client.AddTwoDigits(req, &resp)};
    printf("%s return %d\n", __func__, ret);
    printf("resp: {\n%s}\n", resp.DebugString().c_str());

    return ret;
}

int AlphaSvrToolImpl::AddSomeDigits(phxrpc::OptMap &opt_map) {
    alphasvr::AddSomeDigitsReq req;
    alphasvr::AddSomeDigitsResp resp;

    // TODO: fill req from opt_map

    AlphaSvrClient client;
    int ret{client.AddSomeDigits(req, &resp)};
    printf("%s return %d\n", __func__, ret);
    printf("resp: {\n%s}\n", resp.DebugString().c_str());

    return ret;
}

