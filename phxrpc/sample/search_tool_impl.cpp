/* search_tool_impl.cpp

 Generated by phxrpc_pb2tool from search.proto

*/

#include "search_tool_impl.h"

#include "search_client.h"

#include "phxrpc/file.h"


using namespace phxrpc;
using namespace std;


SearchToolImpl::SearchToolImpl() {
}

SearchToolImpl::~SearchToolImpl() {
}

int SearchToolImpl::PHXEcho(phxrpc::OptMap &opt_map) {
    google::protobuf::StringValue req;
    google::protobuf::StringValue resp;

    if (nullptr == opt_map.Get('s')) return -1;

    req.set_value(opt_map.Get('s'));

    SearchClient client;
    int ret{client.PHXEcho(req, &resp)};
    printf("%s return %d\n", __func__, ret);
    printf("resp: {\n%s}\n", resp.DebugString().c_str());

    return ret;
}

int SearchToolImpl::Search(phxrpc::OptMap &opt_map) {
    search::SearchRequest req;
    search::SearchResult resp;

    // TODO: fill req from opt_map

    SearchClient client;
    int ret{client.Search(req, &resp)};
    printf("%s return %d\n", __func__, ret);
    printf("resp: {\n%s}\n", resp.DebugString().c_str());

    return ret;
}

int SearchToolImpl::Notify(phxrpc::OptMap &opt_map) {
    google::protobuf::StringValue req;
    google::protobuf::Empty resp;

    // TODO: fill req from opt_map

    SearchClient client;
    int ret{client.Notify(req, &resp)};
    printf("%s return %d\n", __func__, ret);
    printf("resp: {\n%s}\n", resp.DebugString().c_str());

    return ret;
}

